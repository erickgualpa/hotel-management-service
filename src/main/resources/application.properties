spring.application.name=hotel-management-service
# Spring datasource configuration
spring.datasource.url=jdbc:postgresql://host.docker.internal:5432/postgres
spring.datasource.username=test-user
spring.datasource.password=test-password
# Spring AMQP configuration
spring.rabbitmq.host=${message-broker.rabbitmq.host}
spring.rabbitmq.port=${message-broker.rabbitmq.amqp-port}
spring.rabbitmq.username=${message-broker.rabbitmq.admin-username}
spring.rabbitmq.password=${message-broker.rabbitmq.admin-password}
# RabbitMQ configuration
message-broker.rabbitmq.host=host.docker.internal
message-broker.rabbitmq.amqp-port=5672
message-broker.rabbitmq.admin-username=test-rabbitmq-user
message-broker.rabbitmq.admin-password=test-rabbitmq-password
# External clients configuration
clients.image-service.host=http://fake-image-service-host